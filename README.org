* Project Literacy

#+html: <p align="center">Hand Writting Recognition Using TensorFlow</p>

** Background

   
   This project was made to solve a huge problem we have in our world. How do
   we digitilize the trillions of physical documents that we have archived? Some
   of these archives include important information such as crimminal records,
   scientific studies, patient records, family history, etc. But unless we hired
   the whole world we would still need several genrations to complete this task.

   But the solution to this is machine learning, but to be more precise it's
   deep learning. Deep learning is based of what we know about neurological
   processing. In the brain we have many networks of neurons that produce an
   "output" or result. These results are then processed by other networks and so
   on. This is deep learning a model. The model is the brain and the layers are
   the neural networks.

** Problem[ S ]
   
   1. Messy
   2. Huge data size 
   3. Availability of Data
   4. Splitting data.
   
   It is very difficult for a human to learn to read and it's the same for
   computers. Let's face the facts, us humans are very messy and our
   handwritting reflect that. We have thousands of ways to write the same
   character or number.
   
   In this we will focus on letters since processing numbers has been succesfuly
   accomplished. But even without numbers this leaves us a huge dataset that our
   machine must learn from. We need thousands of examples for each letter to be
   able to correctly learn.

   Sure there are millions of documents and handwritting examples in the world but 
   to make these usable it would take a whole team to do. 

   To be able to read documents we must be able to break words into individual letters
   and then process those.

** [[https://www.nist.gov/itl/iad/image-group/emnist-dataset][Dataset]]

   We will be using the EMNIST dataset which is a subset of the MNIST dataset. Spcifically we 
   will use the emnist-letters.

#+html: <p align="center"><img src="img/graph_one.png" /></p>

   As we can see we have 26 classes and about 6,000 samples for each. The data will be respresented
   in a MATLab format.

** Tools

*** [[https://www.python.org/downloads/release/python-350/][Python 3.5]]


*** [[ https://www.tensorflow.org/][TensorFlow]]


    Google's computational library that was built for machine learning and deep learning.
    
    *Install*

    #+BEGIN_SRC 
    pip install tensorflow
    #+END_SRC
   
    
*** [[https://keras.io/#installation][Keras]]

    #+BEGIN_QUOTE
    Keras is a high-level neural networks API, written in Python and capable of
    running on top of TensorFlow, CNTK, or Theano. It was developed with a focus
    on enabling fast experimentation. *Being able to go from idea to result with
    the least possible delay is key to doing good research.*
    #+END_QUOTE

    #+BEGIN_SRC 
    pip install keras
    #+END_SRC
   
   

*** [[http://www.numpy.org/][Numpy]]

    #+BEGIN_QUOTE
    NumPy is the fundamental package for scientific computing with Python. It
    contains among other things:

    - a powerful N-dimensional array object sophisticated (broadcasting)
    functions
    - tools for integrating C/C++ and Fortran code
    - useful linear algebra, Fourier transform, and random number capabilities 
    
    Besides its obvious scientific uses, NumPy can also be used as an efficient
    multi-dimensional container of generic data. Arbitrary data-types can be
    defined. This allows NumPy to seamlessly and speedily integrate with a wide
    variety of databases.
    #+END_QUOTE

** Type of Learning [ C.N.N. ]

   We will be using [[http://deeplearning.net/tutorial/lenet.html][convolution neural networks]] in this type of machine
   learning. As the link article mentions deep learning is based on models.
   Various layers using each others output to come to a result.

*** Layers 
    
    - Conv2D
      
      This is our 2 dimensional neural network. we specify that it will compute
      5x5 for 32 features.

    - LeakyRelU
      
      From basic machine learning we learned about the sigmoid function, an
      activation function.
      #+html: <p align="center"><img src="img/sig.svg" /></p>
      
      RelU or Rectified Liniear unit acts as our activation function for our CNN.

      

    
   
   

   
    
